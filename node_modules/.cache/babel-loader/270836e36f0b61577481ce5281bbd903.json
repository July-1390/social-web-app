{"ast":null,"code":"import config from \"config\";\nexport const userServices = {\n  register,\n  logout\n};\n\nfunction register(user) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  };\n  return fetch(`${config.apiUrl}/users/registration`, requestOptions).then(handleResponse);\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem(\"user\");\n}\n\nfunction handleResponse(response) {\n  return response.text().then(text => {\n    const data = text && JSON.parse(text);\n\n    if (!response.ok) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        logout();\n        location.reload(true);\n      }\n\n      const error = data && data.message || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}","map":{"version":3,"sources":["/Users/july/Desktop/study/try-redux/src/services/userServices.js"],"names":["config","userServices","register","logout","user","requestOptions","method","headers","body","JSON","stringify","fetch","apiUrl","then","handleResponse","localStorage","removeItem","response","text","data","parse","ok","status","location","reload","error","message","statusText","Promise","reject"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,QAD0B;AAE1BC,EAAAA;AAF0B,CAArB;;AAKP,SAASD,QAAT,CAAkBE,IAAlB,EAAwB;AACtB,QAAMC,cAAc,GAAG;AACrBC,IAAAA,MAAM,EAAE,MADa;AAErBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFY;AAGrBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAHe,GAAvB;AAMA,SAAOO,KAAK,CAAE,GAAEX,MAAM,CAACY,MAAO,qBAAlB,EAAwCP,cAAxC,CAAL,CAA6DQ,IAA7D,CACLC,cADK,CAAP;AAGD;;AAED,SAASX,MAAT,GAAkB;AAChB;AACAY,EAAAA,YAAY,CAACC,UAAb,CAAwB,MAAxB;AACD;;AAED,SAASF,cAAT,CAAwBG,QAAxB,EAAkC;AAChC,SAAOA,QAAQ,CAACC,IAAT,GAAgBL,IAAhB,CAAsBK,IAAD,IAAU;AACpC,UAAMC,IAAI,GAAGD,IAAI,IAAIT,IAAI,CAACW,KAAL,CAAWF,IAAX,CAArB;;AACA,QAAI,CAACD,QAAQ,CAACI,EAAd,EAAkB;AAChB,UAAIJ,QAAQ,CAACK,MAAT,KAAoB,GAAxB,EAA6B;AAC3B;AACAnB,QAAAA,MAAM;AACNoB,QAAAA,QAAQ,CAACC,MAAT,CAAgB,IAAhB;AACD;;AAED,YAAMC,KAAK,GAAIN,IAAI,IAAIA,IAAI,CAACO,OAAd,IAA0BT,QAAQ,CAACU,UAAjD;AACA,aAAOC,OAAO,CAACC,MAAR,CAAeJ,KAAf,CAAP;AACD;;AAED,WAAON,IAAP;AACD,GAdM,CAAP;AAeD","sourcesContent":["import config from \"config\";\n\nexport const userServices = {\n  register,\n  logout,\n};\n\nfunction register(user) {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify(user),\n  };\n\n  return fetch(`${config.apiUrl}/users/registration`, requestOptions).then(\n    handleResponse\n  );\n}\n\nfunction logout() {\n  // remove user from local storage to log user out\n  localStorage.removeItem(\"user\");\n}\n\nfunction handleResponse(response) {\n  return response.text().then((text) => {\n    const data = text && JSON.parse(text);\n    if (!response.ok) {\n      if (response.status === 401) {\n        // auto logout if 401 response returned from api\n        logout();\n        location.reload(true);\n      }\n\n      const error = (data && data.message) || response.statusText;\n      return Promise.reject(error);\n    }\n\n    return data;\n  });\n}\n"]},"metadata":{},"sourceType":"module"}